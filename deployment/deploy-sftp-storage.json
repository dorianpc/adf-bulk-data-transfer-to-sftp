{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.10.61.36676",
            "templateHash": "15204353955073578650"
        }
    },
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage Account Name"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "northcentralus",
                "eastus",
                "eastus2euap",
                "centralus",
                "canadaeast",
                "canadacentral",
                "northeurope",
                "australiaeast",
                "switzerlandnorth",
                "germanywestcentral",
                "eastasia",
                "francecentral"
            ],
            "metadata": {
                "description": "Region"
            }
        },
        "sftpUser": {
            "type": "string",
            "metadata": {
                "description": "Username of primary user"
            }
        },
        "homeDirectory": {
            "type": "string",
            "defaultValue": "uploads",
            "metadata": {
                "description": "Home directory of primary user. Should be a container."
            }
        }
        // "publicKey": {
        //     "type": "string",
        //     "defaultValue": "",
        //     "metadata": {
        //         "description": "SSH Public Key for primary user. If not specified, Azure will generate a password which can be accessed securely"
        //     }
        // }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}{1}', parameters('storageAccountName'), add(copyIndex(), 1))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true,
                "isLocalUserEnabled": true,
                "isSftpEnabled": true
            },
            "copy": {
                "name": "storageLoop",
                "count": 3
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}{1}/default/{2}', parameters('storageAccountName'), add(copyIndex(), 1), parameters('homeDirectory'))]",
            "properties": {
                "publicAccess": "None"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('storageAccountName'), add(copyIndex(), 1)))]"
            ],
            "copy": {
                "name": "containerLoop",
                "count": 3
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/localUsers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}{1}/{2}', parameters('storageAccountName'), add(copyIndex(), 1), parameters('sftpUser'))]",
            "properties": {
                "permissionScopes": [
                    {
                        "permissions": "rcwdl",
                        "service": "blob",
                        "resourceName": "[parameters('homeDirectory')]"
                    }
                ],
                "homeDirectory": "[parameters('homeDirectory')]",
                "hasSshPassword": true
                // "sshAuthorizedKeys": "[if(empty(parameters('publicKey')), null(), createArray(createObject('description', format('{0} public key', parameters('userName')), 'key', parameters('publicKey'))))]",
                // "hasSharedKey": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('storageAccountName'), add(copyIndex(), 1)))]"
            ],
            "copy": {
                "name": "localUsersLoop",
                "count": 3
            }
        }

    ]
}